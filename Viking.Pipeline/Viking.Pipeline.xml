<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Viking.Pipeline</name>
    </assembly>
    <members>
        <member name="T:Viking.Pipeline.AssignablePipelineStage`1">
            <summary>
            Provides a value to the pipeline which can be changed at will.
            </summary>
            <typeparam name="TValue">The type of the provided value.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.AssignablePipelineStage`1.#ctor(System.String,`0)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.AssignablePipelineStage`1"/> with the specified name and initial value, using the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to check for equality.
            </summary>
            <param name="name">The name of the value.</param>
            <param name="initial">The initial value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is null.</exception>
        </member>
        <member name="M:Viking.Pipeline.AssignablePipelineStage`1.#ctor(System.String,`0,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.AssignablePipelineStage`1"/> with the specified name, initial value and comparer.
            </summary>
            <param name="name">The name of the value.</param>
            <param name="initial">The initial value.</param>
            <param name="comparer">The comparer to use for equality comparison.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="comparer"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.AssignablePipelineStage`1.Value">
            <summary>
            Gets the current value provided by this stage.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.AssignablePipelineStage`1.Comparer">
            <summary>
            Gets the comparer used by this stage to determine value equality.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.AssignablePipelineStage`1.SetValue(`0)">
            <summary>
            Sets the value provided by this stage.
            </summary>
            <param name="value">The new value.</param>
            <returns>True if the value changed.</returns>
        </member>
        <member name="M:Viking.Pipeline.AssignablePipelineStage`1.SetValueWithoutInvalidating(`0)">
            <summary>
            Sets the value provided by this stage without invalidating the pipeline.
            </summary>
            <param name="value">The new value.</param>
            <returns>True if the value changed.</returns>
        </member>
        <member name="T:Viking.Pipeline.CachingPipelineStage`1">
            <summary>
            Provides caching of values in the pipeline to prevent multiple retrievals from upstream.
            </summary>
            <typeparam name="TValue">The type of value to cache.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.CachingPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.CachingPipelineStage`1"/> with the specified input.
            </summary>
            <param name="input">The input from which to cache values.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.CachingPipelineStage`1.Input">
            <summary>
            Gets the stage which to cache for.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.CachingPipelineStage`1.IsValid">
            <summary>
            Checks if the cache is currently holding a valid value.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.CachingPipelineStage`1.InvalidateCache">
            <summary>
            Invalidates the cache.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.AsyncPipelineStage`1">
            <summary>
            Retrieves upstream values in an async-await fashion.
            </summary>
            <typeparam name="TValue">The value type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.AsyncPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.AsyncPipelineStage`1"/> with the specified input.
            </summary>
            <param name="input">The stage which to retrieve value from asynchronously.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.AsyncPipelineStage`1.Input">
            <summary>
            Gets the stage which will have its value retrieved asynchronously.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.ConcurrentExecutionPipelineStage`1">
            <summary>
            Enables concurrent execution of a pipeline stage.
            </summary>
            <typeparam name="TOutput">The output.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ConcurrentExecutionPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ConcurrentExecutionPipelineStage`1"/> for the specified input.
            </summary>
            <param name="input">The stage to execute concurrently.</param>
        </member>
        <member name="T:Viking.Pipeline.ThreadSafePipelineStage`1">
            <summary>
            Makes a pipeline stage thread-safe, ensuring only one invocation of GetValue can be done at a time.
            In case of concurrent requests, all requests will take the result of the currently running invocation.
            </summary>
            <typeparam name="TOutput">The output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ThreadSafePipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ThreadSafePipelineStage`1"/> with the specified input to make thread-safe.
            </summary>
            <param name="input">The pipeline stage to make thread-safe.</param>
        </member>
        <member name="P:Viking.Pipeline.ThreadSafePipelineStage`1.Input">
            <summary>
            The input to make thread-safe.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.ConstantPipelineStage`1">
            <summary>
            Makes a constant value available to the pipeline.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ConstantPipelineStage`1.#ctor(`0)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ConstantPipelineStage`1"/> with the specified value.
            </summary>
            <param name="constant">The constant.</param>
        </member>
        <member name="M:Viking.Pipeline.ConstantPipelineStage`1.#ctor(System.String,`0)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ConstantPipelineStage`1"/> with the specified name and value.
            </summary>
            <param name="name">The name of the constant.</param>
            <param name="constant">The constant.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.ConstantPipelineStage`1.Value">
            <summary>
            The constant value.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.PipelineException">
            <summary>
            Represents an error related ot the execution or setup of a pipeline.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineException.#ctor">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.PipelineException"/>.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.PipelineException"/> with a specified error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Viking.Pipeline.PipelineException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.PipelineException"/> with a specified error message and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Viking.Pipeline.PipelineGraph">
            <summary>
            Describes a part of a pipeline as a graph.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineGraph.GetNode(Viking.Pipeline.IPipelineStage)">
            <summary>
            Gets a node from the graph.
            </summary>
            <param name="stage">The stage of which to get a node from.</param>
            <returns>The node corresponding to the specified stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineGraph.HasNode(Viking.Pipeline.IPipelineStage)">
            <summary>
            Checks if the specified stage has a node in this <see cref="T:Viking.Pipeline.PipelineGraph"/>.
            </summary>
            <param name="stage">The stage to check for.</param>
            <returns>True if there is a node in the graph corresponding to the specified stage.</returns>
        </member>
        <member name="P:Viking.Pipeline.PipelineGraph.TopologySortedNodes">
            <summary>
            Gets all nodes in this graph, in some topological order.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.PipelineGraphNode">
            <summary>
            A node in a <see cref="T:Viking.Pipeline.PipelineGraph"/>.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineGraphNode.#ctor(Viking.Pipeline.IPipelineStage)">
            <summary>
            Creates a new pipeline graph node.
            </summary>
            <param name="stage"></param>
        </member>
        <member name="P:Viking.Pipeline.PipelineGraphNode.Stage">
            <summary>
            The stage this node represents.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.PipelineGraphNode.Name">
            <summary>
            Gets the name of this node (the stage).
            </summary>
        </member>
        <member name="P:Viking.Pipeline.PipelineGraphNode.DependentNodes">
            <summary>
            Gets all nodes which are dependent on this node.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.DataRetrievalPipelineStage`1">
            <summary>
            Retrieves data from a function and makes it available to the pipeline.
            </summary>
            <typeparam name="TValue">The output value type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.DataRetrievalPipelineStage`1.#ctor(System.String,System.Func{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.DataRetrievalPipelineStage`1"/> with the specified name and source.
            </summary>
            <param name="name">The name of this stage.</param>
            <param name="source">The function from which to retrieve the value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="source"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.DataRetrievalPipelineStage`1.Source">
            <summary>
            Gets the source from which this stage retrieves its values.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.DeltaExtractor`2">
            <summary>
            Delegate extracting some change from an old value to a new one.
            </summary>
            <typeparam name="TInput">The data to look for changes in.</typeparam>
            <typeparam name="TDelta">The delta.</typeparam>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <returns>The delta.</returns>
        </member>
        <member name="T:Viking.Pipeline.DeltaPipelineStage`2">
            <summary>
            Supports getting the delta of a pipeline stage. Eager stage.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="TOutput">The delta type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.DeltaPipelineStage`2.#ctor(System.String,Viking.Pipeline.DeltaExtractor{`0,`1},Viking.Pipeline.IPipelineStage{`0},`1)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.DeltaPipelineStage`2"/> with the specified name, extractor and input.
            </summary>
            <param name="name">The name of this stage.</param>
            <param name="deltaExtractor">The function used to extract a delta.</param>
            <param name="input">The pipeline stage which to extract delta from.</param>
            <param name="initial">The initial delta value.</param>
        </member>
        <member name="P:Viking.Pipeline.DeltaPipelineStage`2.DeltaExtractor">
            <summary>
            Gets the function used to extract the delta.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.DeltaPipelineStage`2.Input">
            <summary>
            Gets the pipeline stage which to extract delta for.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.DetachablePipelineStage`1">
            <summary>
            Enables quick detachment of anything which depends on this pipeline stage.
            </summary>
            <typeparam name="TValue">The value.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.DetachablePipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.DetachablePipelineStage`1"/> with the specified input.
            </summary>
            <param name="input">The input.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is null.</exception>
        </member>
        <member name="M:Viking.Pipeline.DetachablePipelineStage`1.DetachFromPipeline">
            <summary>
            Detach all dependent stages from this stage.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.EagerPipelineStage`1">
            <summary>
            Eagerly gets values from upstream stages.
            </summary>
            <typeparam name="TValue">The output value type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.EagerPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.EagerPipelineStage`1"/> with the specified input.
            </summary>
            <param name="input">The input to make eager evaluation of.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.EagerPipelineStage`1.Input">
            <summary>
            Gets the input to eagerly retrieve value from.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.EqualityCheck`1">
            <summary>
            Delegate that checks two values for equality.
            </summary>
            <typeparam name="T">The type of the objects.</typeparam>
            <param name="a">The first object.</param>
            <param name="b">The second object.</param>
            <returns>True if a and b are equal.</returns>
        </member>
        <member name="T:Viking.Pipeline.EqualityCheckerPipelineStage`1">
            <summary>
            Checks for equality and stops propagation if found.
            </summary>
            <typeparam name="TValue">The type of the output.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.EqualityCheckerPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.EqualityCheckerPipelineStage`1"/> with the specified input, using the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> as comparer.
            </summary>
            <param name="input">The input.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is null.</exception>
        </member>
        <member name="M:Viking.Pipeline.EqualityCheckerPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.EqualityCheckerPipelineStage`1"/> with the specified input and comparer.
            </summary>
            <param name="input">The input.</param>
            <param name="comparer">The comparer to use for equality.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> or <paramref name="comparer"/> is null.</exception>
        </member>
        <member name="M:Viking.Pipeline.EqualityCheckerPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.EqualityCheck{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.EqualityCheckerPipelineStage`1"/> with the specified input and comparer.
            </summary>
            <param name="input">The input.</param>
            <param name="comparer">The comparer to use for equality.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> or <paramref name="comparer"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.EqualityCheckerPipelineStage`1.Input">
            <summary>
            The input to check for equality.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.EqualityCheckerPipelineStage`1.Comparer">
            <summary>
            The comparer used to check for equality.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`2">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`2.#ctor(System.String,System.Func{`0,`1},Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`2.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1}},Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`2.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`2.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`2.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`2.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`2.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`2.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.PipelineOperations">
            <summary>
            Provides functions to easily create pipeline operations.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``2(System.String,System.Func{``0,``1},Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``2(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1}},Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``3(System.String,System.Func{``0,``1,``2},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``3(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``4(System.String,System.Func{``0,``1,``2,``3},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``4(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2,``3}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``5(System.String,System.Func{``0,``1,``2,``3,``4},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``5(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2,``3,``4}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``6(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2,``3,``4,``5}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``7(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2,``3,``4,``5,``6}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``8(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``9(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},Viking.Pipeline.IPipelineStage{``7})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineOperations.Create``9(System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},Viking.Pipeline.IPipelineStage{``7})">
            <summary>
            Create a new pipeline operation.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <returns>The pipeline stage reflecting the result of the operation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`3">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`3.#ctor(System.String,System.Func{`0,`1,`2},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`3.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`3.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`3.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`3.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`3.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`3.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`3.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`3.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`4">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`4.#ctor(System.String,System.Func{`0,`1,`2,`3},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`4.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2,`3}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`4.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`4.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`4.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`4.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`4.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`4.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`4.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`4.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`5">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`5.#ctor(System.String,System.Func{`0,`1,`2,`3,`4},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`5.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2,`3,`4}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`5.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`5.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`5.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`5.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`5.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`5.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`5.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`5.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`5.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`6">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`6.#ctor(System.String,System.Func{`0,`1,`2,`3,`4,`5},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`6.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2,`3,`4,`5}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`6.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`6.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`6.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`6.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`7">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`7.#ctor(System.String,System.Func{`0,`1,`2,`3,`4,`5,`6},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`7.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2,`3,`4,`5,`6}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`7.Input6">
            <summary>
            Input number 6.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`7.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`7.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`7.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`8">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`8.#ctor(System.String,System.Func{`0,`1,`2,`3,`4,`5,`6,`7},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`8.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input6">
            <summary>
            Input number 6.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`8.Input7">
            <summary>
            Input number 7.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`8.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`8.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`8.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.OperationPipelineStage`9">
            <summary>
            Enables operations on pipeline values, yielding a new pipeline as a result.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <typeparam name="TOutput">The stage output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`9.#ctor(System.String,System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},Viking.Pipeline.IPipelineStage{`7})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`9.#ctor(System.String,Viking.Pipeline.IPipelineStage{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},Viking.Pipeline.IPipelineStage{`7})">
            <summary>
            Creates a new OperationPipelineStage with the specified name, operation and inputs.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="operation">The pipeline from which to retrieve the operation.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Name">
            <summary>
            Gets the name of the operation.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Operation">
            <summary>
            Gets the pipeline stage describing the operation to be performed.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input6">
            <summary>
            Input number 6.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input7">
            <summary>
            Input number 7.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.OperationPipelineStage`9.Input8">
            <summary>
            Input number 8.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`9.GetValue">
            <summary>
            Gets the result of performing the operation on all specified inputs.
            </summary>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`9.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.OperationPipelineStage`9.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`1">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.#ctor(System.Action{`0},Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.#ctor(System.Action{`0},Viking.Pipeline.IPipelineStage{`0},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.#ctor(System.String,System.Action{`0},Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.#ctor(System.String,System.Action{`0},Viking.Pipeline.IPipelineStage{`0},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`1.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`1.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`1.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`1.GetValue">
            <summary>
            Gets the pass through value of this <see cref="T:Viking.Pipeline.ReactionPipelineStage`1"/>.
            </summary>
            <returns>The pass-through value.</returns>
        </member>
        <member name="T:Viking.Pipeline.PipelineReactions">
            <summary>
            Provides functions to easily create pipeline reactions.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``1(System.Action{``0},Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``1(System.Action{``0},Viking.Pipeline.IPipelineStage{``0},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``1(System.String,System.Action{``0},Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``1(System.String,System.Action{``0},Viking.Pipeline.IPipelineStage{``0},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``2(System.Action{``0,``1},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``2(System.Action{``0,``1},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``2(System.String,System.Action{``0,``1},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``2(System.String,System.Action{``0,``1},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``3(System.Action{``0,``1,``2},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``3(System.Action{``0,``1,``2},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``3(System.String,System.Action{``0,``1,``2},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``3(System.String,System.Action{``0,``1,``2},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``4(System.Action{``0,``1,``2,``3},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``4(System.Action{``0,``1,``2,``3},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``4(System.String,System.Action{``0,``1,``2,``3},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``4(System.String,System.Action{``0,``1,``2,``3},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``5(System.Action{``0,``1,``2,``3,``4},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``5(System.Action{``0,``1,``2,``3,``4},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``5(System.String,System.Action{``0,``1,``2,``3,``4},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``5(System.String,System.Action{``0,``1,``2,``3,``4},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``6(System.Action{``0,``1,``2,``3,``4,``5},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``6(System.Action{``0,``1,``2,``3,``4,``5},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``6(System.String,System.Action{``0,``1,``2,``3,``4,``5},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``6(System.String,System.Action{``0,``1,``2,``3,``4,``5},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``7(System.Action{``0,``1,``2,``3,``4,``5,``6},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``7(System.Action{``0,``1,``2,``3,``4,``5,``6},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``7(System.String,System.Action{``0,``1,``2,``3,``4,``5,``6},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``7(System.String,System.Action{``0,``1,``2,``3,``4,``5,``6},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},Viking.Pipeline.IPipelineStage{``7})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},Viking.Pipeline.IPipelineStage{``7},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``8(System.String,System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},Viking.Pipeline.IPipelineStage{``7})">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineReactions.Create``8(System.String,System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{``1},Viking.Pipeline.IPipelineStage{``2},Viking.Pipeline.IPipelineStage{``3},Viking.Pipeline.IPipelineStage{``4},Viking.Pipeline.IPipelineStage{``5},Viking.Pipeline.IPipelineStage{``6},Viking.Pipeline.IPipelineStage{``7},System.Boolean)">
            <summary>
            Creates a reaction to the specified pipeline stages.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
            <returns>A reaction stage. The reaction is only guaranteed to fire while you hold on to this reference.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`2">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`2.#ctor(System.Action{`0,`1},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`2.#ctor(System.Action{`0,`1},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`2.#ctor(System.String,System.Action{`0,`1},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`2.#ctor(System.String,System.Action{`0,`1},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`2.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`2.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`2.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`2.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`2.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`2.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`3">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`3.#ctor(System.Action{`0,`1,`2},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`3.#ctor(System.Action{`0,`1,`2},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`3.#ctor(System.String,System.Action{`0,`1,`2},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`3.#ctor(System.String,System.Action{`0,`1,`2},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`3.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`3.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`3.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`3.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`3.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`3.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`3.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`4">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`4.#ctor(System.Action{`0,`1,`2,`3},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`4.#ctor(System.Action{`0,`1,`2,`3},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`4.#ctor(System.String,System.Action{`0,`1,`2,`3},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`4.#ctor(System.String,System.Action{`0,`1,`2,`3},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`4.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`4.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`4.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`4.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`4.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`4.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`4.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`4.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`5">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`5.#ctor(System.Action{`0,`1,`2,`3,`4},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`5.#ctor(System.Action{`0,`1,`2,`3,`4},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`5.#ctor(System.String,System.Action{`0,`1,`2,`3,`4},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`5.#ctor(System.String,System.Action{`0,`1,`2,`3,`4},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`5.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`5.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`5.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`6">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`6.#ctor(System.Action{`0,`1,`2,`3,`4,`5},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`6.#ctor(System.Action{`0,`1,`2,`3,`4,`5},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`6.#ctor(System.String,System.Action{`0,`1,`2,`3,`4,`5},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`6.#ctor(System.String,System.Action{`0,`1,`2,`3,`4,`5},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`6.Input6">
            <summary>
            Input number 6.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`6.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`6.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`7">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`7.#ctor(System.Action{`0,`1,`2,`3,`4,`5,`6},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`7.#ctor(System.Action{`0,`1,`2,`3,`4,`5,`6},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`7.#ctor(System.String,System.Action{`0,`1,`2,`3,`4,`5,`6},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`7.#ctor(System.String,System.Action{`0,`1,`2,`3,`4,`5,`6},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input6">
            <summary>
            Input number 6.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`7.Input7">
            <summary>
            Input number 7.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`7.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`7.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage`8">
            <summary>
            Enables reactions to changes in pipeline values.
            </summary>
            <typeparam name="TInput1">The type of input number 1.</typeparam>
            <typeparam name="TInput2">The type of input number 2.</typeparam>
            <typeparam name="TInput3">The type of input number 3.</typeparam>
            <typeparam name="TInput4">The type of input number 4.</typeparam>
            <typeparam name="TInput5">The type of input number 5.</typeparam>
            <typeparam name="TInput6">The type of input number 6.</typeparam>
            <typeparam name="TInput7">The type of input number 7.</typeparam>
            <typeparam name="TInput8">The type of input number 8.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`8.#ctor(System.Action{`0,`1,`2,`3,`4,`5,`6,`7},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},Viking.Pipeline.IPipelineStage{`7})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`8.#ctor(System.Action{`0,`1,`2,`3,`4,`5,`6,`7},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},Viking.Pipeline.IPipelineStage{`7},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction to the specified inputs.
            </summary>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`8.#ctor(System.String,System.Action{`0,`1,`2,`3,`4,`5,`6,`7},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},Viking.Pipeline.IPipelineStage{`7})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`8.#ctor(System.String,System.Action{`0,`1,`2,`3,`4,`5,`6,`7},Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{`1},Viking.Pipeline.IPipelineStage{`2},Viking.Pipeline.IPipelineStage{`3},Viking.Pipeline.IPipelineStage{`4},Viking.Pipeline.IPipelineStage{`5},Viking.Pipeline.IPipelineStage{`6},Viking.Pipeline.IPipelineStage{`7},System.Boolean)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified name and reaction to the specified inputs.
            </summary>
            <param name="name">The name of the new reaction.</param>
            <param name="reaction">The reaction delegate.</param>
            <param name="input1">Input number 1.</param>
            <param name="input2">Input number 2.</param>
            <param name="input3">Input number 3.</param>
            <param name="input4">Input number 4.</param>
            <param name="input5">Input number 5.</param>
            <param name="input6">Input number 6.</param>
            <param name="input7">Input number 7.</param>
            <param name="input8">Input number 8.</param>
            <param name="reactImmediately">Denotes if the reaction should fire immediately upon construction.</param>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Name">
            <summary>
            Gets the name of the reaction.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Reaction">
            <summary>
            The function which is called as a reaction to any change in inputs.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input1">
            <summary>
            Input number 1.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input2">
            <summary>
            Input number 2.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input3">
            <summary>
            Input number 3.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input4">
            <summary>
            Input number 4.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input5">
            <summary>
            Input number 5.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input6">
            <summary>
            Input number 6.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input7">
            <summary>
            Input number 7.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage`8.Input8">
            <summary>
            Input number 8.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`8.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Handles invalidation of the operation stage, and reacts as appropriate.
            </summary>
            <param name="invalidator">The invalidator.</param>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage`8.ToString">
            <summary>
            Gets a textual representation of this pipeline stage.
            </summary>
            <returns>A textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.IPipelineInvalidator">
            <summary>
            Provides functionality to invalidate, revalidate and check the current status of a pipeline propagation.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.IPipelineInvalidator.Invalidate(Viking.Pipeline.IPipelineStage)">
            <summary>
            Invalidates the specified stage.
            </summary>
            <param name="stage">The stage to invalidate.</param>
            <returns>True if the stage was not already invalidated.</returns>
        </member>
        <member name="M:Viking.Pipeline.IPipelineInvalidator.InvalidateAllDependentStages(Viking.Pipeline.IPipelineStage)">
            <summary>
            Invalidates all stages with dependencies to the specified stage.
            </summary>
            <param name="stage">The stage in question.</param>
        </member>
        <member name="M:Viking.Pipeline.IPipelineInvalidator.Revalidate(Viking.Pipeline.IPipelineStage)">
            <summary>
            Revalidate the specified stage.
            </summary>
            <param name="stage">The stage to revalidate.</param>
            <returns>True of if the stage was invalid and is now revalidated.</returns>
        </member>
        <member name="M:Viking.Pipeline.IPipelineInvalidator.IsInvalidated(Viking.Pipeline.IPipelineStage)">
            <summary>
            Checks if the specified stage is invalidated in this pipeline propagation.
            </summary>
            <param name="stage">The stage to check.</param>
            <returns>True if the specified stage is invalidated.</returns>
        </member>
        <member name="P:Viking.Pipeline.IPipelineInvalidator.AllInvalidatedStages">
            <summary>
            Gets all invalidated stages (thus far).
            </summary>
        </member>
        <member name="T:Viking.Pipeline.IPipelineStage">
            <summary>
            Interface of a stage in a declarative pipeline.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.IPipelineStage.Name">
            <summary>
            The name of this <see cref="T:Viking.Pipeline.IPipelineStage"/>.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.IPipelineStage.OnInvalidate(Viking.Pipeline.IPipelineInvalidator)">
            <summary>
            Defines the behavior of a pipeline stage after it (and potential dependencies) has been invalidated.
            </summary>
            <param name="invalidator">The invalidator, holding the current state of the pipeline propagation.</param>
        </member>
        <member name="T:Viking.Pipeline.IPipelineStage`1">
            <summary>
            Interface of a stage in a declarative pipeline which produces output.
            </summary>
            <typeparam name="TOutput">The type of output produced by the stage.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.IPipelineStage`1.GetValue">
            <summary>
            Gets the value which is the output of this <see cref="T:Viking.Pipeline.IPipelineStage`1"/>.
            </summary>
            <returns>The output value of this stage.</returns>
        </member>
        <member name="T:Viking.Pipeline.MutuallyExclusivePipelineStage`1">
            <summary>
            Conditionally propagates invalidations based on other stages invalidation state during propagation.
            </summary>
            <typeparam name="TValue">The output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.MutuallyExclusivePipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage[])">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.MutuallyExclusivePipelineStage`1"/> with the specified input and mutually exclusive stages.
            </summary>
            <param name="input">The input stage.</param>
            <param name="mutuallyExclusiveWith">The stages which, if invalidated at the time of propagation, will cause this stage to stop propagation.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> or <paramref name="mutuallyExclusiveWith"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.MutuallyExclusivePipelineStage`1.Input">
            <summary>
            Gets the input stage.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.MutuallyExclusivePipelineStage`1.MutuallyExclusiveWith">
            <summary>
            Gets all stages which will stop propagation of this stage if invalid.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.PassivePipelineStage`1">
            <summary>
            Pacifies a stage, causing it to never propagate.
            </summary>
            <typeparam name="TValue">The type of output.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.PassivePipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.PassivePipelineStage`1"/> with the specified input to pacify.
            </summary>
            <param name="input">The stage to pacify.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.PassivePipelineStage`1.Input">
            <summary>
            The input which is pacified.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.PassThroughPipelineStage`1">
            <summary>
            Stage which simply passes the value of the last stage through to the next.
            </summary>
            <typeparam name="TValue">The output value type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.PassThroughPipelineStage`1.#ctor(System.String,Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.PassThroughPipelineStage`1"/> with the specified name and input.
            </summary>
            <param name="name">The name of this stage.</param>
            <param name="input">The input to pass through.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="input"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.PassThroughPipelineStage`1.Input">
            <summary>
            Gets the input of this pass-through stage.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.Patterns.HierarchicalBehavior">
            <summary>
            Describes the expected hierarchical propagation behavior of a <see cref="T:Viking.Pipeline.Patterns.HierarchicalSuspenderNode"/>.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.Patterns.HierarchicalBehavior.PropagateSuspendOnly">
            <summary>
            Propagate suspension down to children. Any resume state simply takes the childs state instead.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.Patterns.HierarchicalBehavior.WeakenSuspensionState">
            <summary>
            The childs state cannot be "stronger" that the parent's state. 
            <see cref="F:Viking.Pipeline.PipelineSuspensionState.Resume"/> > <see cref="F:Viking.Pipeline.PipelineSuspensionState.ResumeWithoutPendingInvalidates"/> > <see cref="F:Viking.Pipeline.PipelineSuspensionState.Suspend"/>
            </summary>
        </member>
        <member name="T:Viking.Pipeline.Patterns.HierarchicalSuspenderNode">
            <summary>
            Creates a hierarchy of suspenders
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.HierarchicalSuspenderNode.#ctor(Viking.Pipeline.IPipelineStage{Viking.Pipeline.PipelineSuspensionState})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.Patterns.HierarchicalSuspenderNode"/> with the specified input as initial input.
            </summary>
            <param name="input"></param>
        </member>
        <member name="P:Viking.Pipeline.Patterns.HierarchicalSuspenderNode.Output">
            <summary>
            Gets the output pipeline of the hierarchy.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.HierarchicalSuspenderNode.CreateChild(Viking.Pipeline.IPipelineStage{Viking.Pipeline.PipelineSuspensionState},Viking.Pipeline.Patterns.HierarchicalBehavior)">
            <summary>
            Creates a child to this hierarchy node.
            </summary>
            <param name="input">The input suspension state of the child.</param>
            <param name="behavior">The desired behavior.</param>
            <returns>The child hierarchy.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.HierarchicalSuspenderNode.WithSuspender``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds the suspender.
            </summary>
            <typeparam name="TValue">The value type of the stage.</typeparam>
            <param name="input">The stage.</param>
            <returns>The suspended stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.HierarchicalSuspenderNode.GetWeakestState(Viking.Pipeline.PipelineSuspensionState,Viking.Pipeline.PipelineSuspensionState)">
            <summary>
            Gets the weakest state of two.
            </summary>
            <param name="parent">The parent state.</param>
            <param name="child">The child state.</param>
            <returns>The weakest state, in the order Resume > ResumeWithoutInvalidate > Suspend.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.HierarchicalSuspenderNode.PropagateSuspensionOnly(Viking.Pipeline.PipelineSuspensionState,Viking.Pipeline.PipelineSuspensionState)">
            <summary>
            Gets the child state, unless parent is suspended.
            </summary>
            <param name="parent">The parent state.</param>
            <param name="child">The child state.</param>
            <returns><see cref="F:Viking.Pipeline.PipelineSuspensionState.Suspend"/> if parent is suspended, otherwise the child state.</returns>
        </member>
        <member name="T:Viking.Pipeline.Patterns.AggregatingTransactionControl">
            <summary>
            Provides control for concurrent transactions. Concurrent transactions are aggregated if they do not overlap.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.AggregatingTransactionControl.#ctor">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.Patterns.AggregatingTransactionControl"/> with the specified transaction behavior.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.AggregatingTransactionControl.CreateTransaction">
            <summary>
            Creates a new transaction. This transaction must be committed, or the system might deadlock.
            </summary>
            <returns>The new transaction.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.AggregatingTransactionControl.Register(Viking.Pipeline.Patterns.DeferredPipelineTransaction)">
            <summary>
            Registers a specified transaction with this <see cref="T:Viking.Pipeline.Patterns.AggregatingTransactionControl"/>.
            </summary>
            <param name="transaction">The transaction to register.</param>
        </member>
        <member name="M:Viking.Pipeline.Patterns.AggregatingTransactionControl.Cancel(Viking.Pipeline.Patterns.DeferredPipelineTransaction)">
            <summary>
            Cancels the specified transaction.
            </summary>
            <param name="transaction">The transaction to cancel.</param>
        </member>
        <member name="M:Viking.Pipeline.Patterns.AggregatingTransactionControl.GetTimestamp">
            <summary>
            Gets a timestamp of some kind.
            </summary>
            <returns>The timestamp.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.AggregatingTransactionControl.Commit(Viking.Pipeline.Patterns.DeferredPipelineTransaction,System.Collections.Generic.IEnumerable{Viking.Pipeline.Patterns.DeferredTransactionPart})">
            <summary>
            Commits the specified transaction.
            </summary>
            <param name="transaction">The transaction.</param>
            <param name="parts">The parts of the transaction.</param>
            <returns>The result of the commit.</returns>
        </member>
        <member name="T:Viking.Pipeline.Patterns.DeferredPipelineTransaction">
            <summary>
            Provides a pipeline transaction which reports back to some <see cref="T:Viking.Pipeline.Patterns.IDeferredTransactionControl"/>.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.DeferredPipelineTransaction.#ctor(Viking.Pipeline.Patterns.IDeferredTransactionControl)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.Patterns.DeferredPipelineTransaction"/> with the specified control.
            </summary>
            <param name="control">The control which to report back to.</param>
        </member>
        <member name="P:Viking.Pipeline.Patterns.DeferredPipelineTransaction.Control">
            <summary>
            Gets the control in charge of this transaction.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.DeferredPipelineTransaction.Commit">
            <summary>
            Commits this transaction.
            </summary>
            <returns>The result.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.DeferredPipelineTransaction.Update(Viking.Pipeline.IPipelineStage,Viking.Pipeline.Patterns.PipelineUpdateAction)">
            <summary>
            Adds the specified stage and update action as a part of the transaction.
            </summary>
            <param name="stage">The stage.</param>
            <param name="update">The update to perform.</param>
            <returns>This transaction.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.DeferredPipelineTransaction.Cancel">
            <summary>
            Cancels this transaction. The transaction will be invalid after this is called.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.Patterns.DeferredTransactionPart">
            <summary>
            Describes a part of a transaction.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.DeferredTransactionPart.#ctor(Viking.Pipeline.IPipelineStage,Viking.Pipeline.Patterns.PipelineUpdateAction,System.Int64)">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.Patterns.DeferredTransactionPart"/>.
            </summary>
            <param name="stage">The stage which is updated.</param>
            <param name="action">The action which performs the update.</param>
            <param name="timestamp">The timestamp.</param>
        </member>
        <member name="P:Viking.Pipeline.Patterns.DeferredTransactionPart.Stage">
            <summary>
            The stage.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.Patterns.DeferredTransactionPart.Action">
            <summary>
            The update action.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.Patterns.DeferredTransactionPart.Timestamp">
            <summary>
            The timestamp of the update.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.Patterns.IDeferredTransactionControl">
            <summary>
            Interface of an object controlling transactions.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IDeferredTransactionControl.GetTimestamp">
            <summary>
            Gets a timestamp, denoting some sort of time relevant to the execution of transactions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IDeferredTransactionControl.Register(Viking.Pipeline.Patterns.DeferredPipelineTransaction)">
            <summary>
            Registers the specified transaction to this control.
            </summary>
            <param name="transaction">The transaction to register.</param>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IDeferredTransactionControl.Commit(Viking.Pipeline.Patterns.DeferredPipelineTransaction,System.Collections.Generic.IEnumerable{Viking.Pipeline.Patterns.DeferredTransactionPart})">
            <summary>
            Commits the specified transaction to the control.
            </summary>
            <param name="transaction">The transaction to commit.</param>
            <param name="parts">The parts.</param>
            <returns>The result of the commit.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IDeferredTransactionControl.Cancel(Viking.Pipeline.Patterns.DeferredPipelineTransaction)">
            <summary>
            Cancels the specified transaction from this control.
            </summary>
            <param name="transaction">The transaction to cancel.</param>
        </member>
        <member name="T:Viking.Pipeline.Patterns.PipelineTransactionResult">
            <summary>
            The result of a <see cref="T:Viking.Pipeline.Patterns.IPipelineTransaction"/> commit.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.Patterns.PipelineTransactionResult.Success">
            <summary>
            The commit was sucessful.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.Patterns.PipelineTransactionResult.PendingSuccess">
            <summary>
            The commit succeeded, but is pending completion.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.Patterns.PipelineTransactionResult.Failed">
            <summary>
            The commit failed.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.Patterns.PipelineUpdateAction">
            <summary>
            Action which update a pipeline stage.
            </summary>
            <returns>True if the stage was actually updated, else false.</returns>
        </member>
        <member name="T:Viking.Pipeline.Patterns.IPipelineTransaction">
            <summary>
            Interface of a pipeline transaction.
            Note that a transaction does not have to abide by all the ACID rules.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IPipelineTransaction.Update(Viking.Pipeline.IPipelineStage,Viking.Pipeline.Patterns.PipelineUpdateAction)">
            <summary>
            Updates the specified stage using the specified update function.
            </summary>
            <param name="stage">The stage to update.</param>
            <param name="update">The action updating the stage.</param>
            <returns></returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IPipelineTransaction.Commit">
            <summary>
            Commits the transaction.
            </summary>
            <returns>The result of the commit.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.IPipelineTransaction.Cancel">
            <summary>
            Cancels the transaction, discarding all changes.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.Patterns.PipelineUpdateExtensions">
            <summary>
            Provides extensions to all <see cref="T:Viking.Pipeline.Patterns.IPipelineTransaction"/>s.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.Patterns.PipelineUpdateExtensions.NoAction">
            <summary>
            Gets an update action denoting no action and always returning true.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineUpdateExtensions.Update``1(Viking.Pipeline.Patterns.IPipelineTransaction,Viking.Pipeline.AssignablePipelineStage{``0},``0)">
            <summary>
            Adds an update to an <see cref="T:Viking.Pipeline.AssignablePipelineStage`1"/>.
            </summary>
            <typeparam name="TValue">The data type.</typeparam>
            <param name="transaction">The transaction.</param>
            <param name="stage">The stage to set value for.</param>
            <param name="value">The new value.</param>
            <returns>The same transaction object.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineUpdateExtensions.Update``1(Viking.Pipeline.Patterns.IPipelineTransaction,Viking.Pipeline.SourceSelectPipelineStage{``0},Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds an update to an <see cref="T:Viking.Pipeline.SourceSelectPipelineStage`1"/>.
            </summary>
            <typeparam name="TValue">The data type.</typeparam>
            <param name="transaction">The transaction.</param>
            <param name="stage">The stage to set value for.</param>
            <param name="newSource">The new source.</param>
            <returns>The same transaction object.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineUpdateExtensions.Update(Viking.Pipeline.Patterns.IPipelineTransaction,Viking.Pipeline.IPipelineStage)">
            <summary>
            Adds the specified stage to the update, without doing any actual updating. The stage will be invalidated on transaction commit.
            </summary>
            <param name="transaction">The transaction</param>
            <param name="stage">The stage to add for the update.</param>
            <returns>The same update object.</returns>
        </member>
        <member name="T:Viking.Pipeline.Patterns.PipelineTransaction">
            <summary>
            Enables atomic update of stages through a fluid interface.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineTransaction.#ctor">
            <summary>
            Starts a new <see cref="T:Viking.Pipeline.Patterns.PipelineTransaction"/>.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineTransaction.Update(Viking.Pipeline.IPipelineStage,Viking.Pipeline.Patterns.PipelineUpdateAction)">
            <summary>
            Adds an update to this transaction.
            </summary>
            <param name="stage">The stage to update.</param>
            <param name="update">The update action.</param>
            <returns>This transaction.</returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineTransaction.Commit">
            <summary>
            Complete the update, invalidating all updated stages as an atomic operation.
            </summary>
            <returns><see cref="F:Viking.Pipeline.Patterns.PipelineTransactionResult.Success"/></returns>
        </member>
        <member name="M:Viking.Pipeline.Patterns.PipelineTransaction.Cancel">
            <summary>
            Cancels the transaction.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.PipelineComparers">
            <summary>
            Provides functions to create comparers.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineComparers.Equality``1(Viking.Pipeline.EqualityCheck{``0})">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> from a function. 
            Note that this comparer will retrieve hashcodes through the <c>GetHashCode()</c> method.
            </summary>
            <typeparam name="T">The type of object to check equality for.</typeparam>
            <param name="equalityCheck">The compare function to use.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> created from the specified function. Hashcode is still retrieved through <code>x.GetHashCode()</code>.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineComparers.SequenceEqualityComparer``1(System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Gets an equality comparer which checks if two sequences has the same items in the same order.
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <param name="elementComparer">The element comparer.</param>
            <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineComparers.IgnoreOrderSequenceEqualityComparer``1(System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Gets an equality comparer which checks if two sequences has the same items, but in any order.
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <param name="elementComparer">The element comparer.</param>
            <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.</returns>
        </member>
        <member name="T:Viking.Pipeline.PipelineCore">
            <summary>
            The core of the pipeline. Contains core functionality like add/remove dependencies and invalidate.
            </summary>
            <summary>
            Contains extension methods for pipeline objects.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.CleanUpPending">
            <summary>
            Cleans up the pipeline and any lingering metadata objects directly.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.GetPipelineGraphIncludingStages(System.Collections.Generic.IEnumerable{Viking.Pipeline.IPipelineStage})">
            <summary>
            Gets the minimal pipeline graph where all the specified stages are included.
            </summary>
            <param name="stages">The stages.</param>
            <returns>The pipeline graph. In case of errors, this might be invalid.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.Invalidate(Viking.Pipeline.IPipelineStage)">
            <summary>
            Invalidates this pipeline stage, propagating it through the pipeline.
            </summary>
            <param name="stage">The stage top invalidate.</param>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.Invalidate(System.Collections.Generic.IEnumerable{Viking.Pipeline.IPipelineStage})">
            <summary>
            Invalidates all specified pipeline stages.
            </summary>
            <param name="stages">The stages to invalidate.</param>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.Invalidate(Viking.Pipeline.IPipelineStage[])">
            <summary>
            Invalidates all specified pipeline stages.
            </summary>
            <param name="stages">The stages to invalidate.</param>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AddDependencies(Viking.Pipeline.IPipelineStage,Viking.Pipeline.IPipelineStage[])">
            <summary>
            Add dependencies for this pipeline stage, propagation on their invalidation.
            </summary>
            <param name="dependee">The stage to add dependencies for.</param>
            <param name="dependencies">The dependencies to add.</param>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.RemoveDependencies(Viking.Pipeline.IPipelineStage,Viking.Pipeline.IPipelineStage[])">
            <summary>
            Removes the specified dependencies from this stage.
            </summary>
            <param name="dependee">The stage to remove dependencies for.</param>
            <param name="dependencies">The dependencies to remove.</param>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.GetAllDependentStages(Viking.Pipeline.IPipelineStage)">
            <summary>
            Get all stages which depend in this stage.
            </summary>
            <param name="stage">The stage to get dependencies for.</param>
            <returns>The dependent stages.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithCache``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a <see cref="T:Viking.Pipeline.CachingPipelineStage`1"/> after this stage, caching the output of this stage until invalidated.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to cache value for.</param>
            <returns>The caching pipeline stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsDetachable``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a <see cref="T:Viking.Pipeline.DetachablePipelineStage`1"/> after this stage, enabling quick detachment of all dependent stages from the pipeline.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to get value from.</param>
            <returns>The detachable stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsPassive``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a <see cref="T:Viking.Pipeline.PassivePipelineStage`1"/> after this stage, causing no invalidations to propagate any further.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to make passive.</param>
            <returns>The passive pass-through pipeline stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithNewName``1(Viking.Pipeline.IPipelineStage{``0},System.String)">
            <summary>
            Adds a pass-through stage after this stage with the specified name.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to change name for.</param>
            <param name="name">The new name.</param>
            <returns>A pipeline stage with the new name.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsAsync``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a stage which will perform the retrieval of the value from this stage using async-await.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to get asynchronously from.</param>
            <returns>The pipeline stage, but with async-await properties.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsEager``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a stage which will eagerly evaluate the value of this stage when invalidated.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to make eager.</param>
            <returns>The eager stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsThreadSafe``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a stage which will add thread safety to this stage's <see cref="M:Viking.Pipeline.IPipelineStage`1.GetValue"/> method.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to make thread-safe.</param>
            <returns>The thread-safe stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithConcurrentExecution``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds a stage which will add thread safety to this stage's <see cref="M:Viking.Pipeline.IPipelineStage`1.GetValue"/> method.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to make thread-safe.</param>
            <returns>The thread-safe stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithConditionalSuspender``1(Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage{Viking.Pipeline.PipelineSuspensionState})">
            <summary>
            Adds a conditional suspender to this stage, only letting invalidations through if the given pipeline stage is not suspended.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to contidionaly add a suspender to.</param>
            <param name="suspender">The suspend state.</param>
            <returns>The conditionally invalidated stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.ExceptWhen``1(Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.IPipelineStage[])">
            <summary>
            Adds a stage which will only propagate invalidations if none of the supplied stages are invalidated.
            </summary>
            <typeparam name="T">The type of the output.</typeparam>
            <param name="stage">The stage to add conditional propagation to.</param>
            <param name="mutuallyExclusiveStages">The mutually exclusive stages.</param>
            <returns>The stage which will only invalidate if none of the specified stages are invalidated.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.Cast``2(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Casts this stage's value to the specified type.
            </summary>
            <typeparam name="TIn">The input type.</typeparam>
            <typeparam name="TOut">The output type.</typeparam>
            <param name="stage">The stage to cast from.</param>
            <returns>The stage containing the cast value.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithEqualityCheck``1(Viking.Pipeline.IPipelineStage{``0})">
            <summary>
            Adds an <see cref="T:Viking.Pipeline.EqualityCheckerPipelineStage`1"/> after this stage.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="stage">The stage to add equality checking for.</param>
            <returns>The equality checking stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithEqualityCheck``1(Viking.Pipeline.IPipelineStage{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Adds an <see cref="T:Viking.Pipeline.EqualityCheckerPipelineStage`1"/> after this stage.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="stage">The stage to add equality checking for.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to use when comparing for equality.</param>
            <returns>The equality checking stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.WithEqualityCheck``1(Viking.Pipeline.IPipelineStage{``0},Viking.Pipeline.EqualityCheck{``0})">
            <summary>
            Adds an <see cref="T:Viking.Pipeline.EqualityCheckerPipelineStage`1"/> after this stage.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="stage">The stage to add equality checking for.</param>
            <param name="comparer">The compare function to use when comparing for equality.</param>
            <returns>The equality checking stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsPipelineConstant``1(``0)">
            <summary>
            Converts this value to a <see cref="T:Viking.Pipeline.ConstantPipelineStage`1"/>.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="value">The value to convert to a constant pipeline stage.</param>
            <returns>The stage containing the value as a constant.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.AsPipelineConstant``1(``0,System.String)">
            <summary>
            Converts this value to a <see cref="T:Viking.Pipeline.ConstantPipelineStage`1"/>.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="value">The value to convert to a constant pipeline stage.</param>
            <param name="name">The name given to the constant.</param>
            <returns>The stage containing the value as a constant.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.UnaryOperation``2(Viking.Pipeline.IPipelineStage{``0},System.String,System.Func{``0,``1})">
            <summary>
            Adds a unary operation modifying the pipeline value.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="TOutput">The output type.</typeparam>
            <param name="stage">The input stage.</param>
            <param name="name">The name of the operation.</param>
            <param name="operation">The operation.</param>
            <returns>The output stage.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.UnaryOperation``2(Viking.Pipeline.IPipelineStage{``0},System.String,Viking.Pipeline.IPipelineStage{System.Func{``0,``1}})">
            <summary>
            Adds a unary operation modifying the pipeline.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="TOutput">The output type.</typeparam>
            <param name="stage">The input stage.</param>
            <param name="name">The name of the operations.</param>
            <param name="operationStage">The operation </param>
            <returns>The changed output.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.CreateReaction(Viking.Pipeline.IPipelineStage,System.Action)">
            <summary>
            Creates a reaction to changes of this stage.
            </summary>
            <param name="stage">The stage to create a reaction for.</param>
            <param name="reaction">The action to perform when this stage is invalidated.</param>
            <returns>The <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> which will react to changes as long as it is alive.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.CreateReaction``1(Viking.Pipeline.IPipelineStage{``0},System.Action{``0})">
            <summary>
            Creates a reaction to changes of this stage.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <param name="stage">The stage to create a reaction for.</param>
            <param name="reaction">The action to perform when this stage is invalidated.</param>
            <returns>The <see cref="T:Viking.Pipeline.ReactionPipelineStage`1"/> which will react to changes as long as it is alive.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.CreateReaction``1(Viking.Pipeline.IPipelineStage{``0},System.Action{``0},System.Boolean)">
            <summary>
            Creates a reaction to changes of this stage.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <param name="stage">The stage to create a reaction for.</param>
            <param name="reaction">The action to perform when this stage is invalidated.</param>
            <param name="reactImmediately">Denotes if the reaction should trigger immediately.</param>
            <returns>The <see cref="T:Viking.Pipeline.ReactionPipelineStage`1"/> which will react to changes as long as it is alive.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.GetClassAndMethod(System.Delegate)">
            <summary>
            Gets the class and method this delegate is representing.
            </summary>
            <param name="del">The delegate.</param>
            <returns>The class and method.</returns>
        </member>
        <member name="M:Viking.Pipeline.PipelineCore.GetDetailedStringRepresentation(System.Delegate)">
            <summary>
            Gets a detailed string representation of this delegate.
            </summary>
            <param name="del">The delegate.</param>
            <returns>The textual representation.</returns>
        </member>
        <member name="T:Viking.Pipeline.PipelinePropagationInformationStage`1">
            <summary>
            Extracts information about the propagation of the pipeline.
            </summary>
            <typeparam name="TOutput">The output type.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.PipelinePropagationInformationStage`1.#ctor(System.String,System.Func{Viking.Pipeline.IPipelineInvalidator,`0},`0,Viking.Pipeline.IPipelineStage[])">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.PipelinePropagationInformationStage`1"/> with the specified name, information extractor and initial output.
            The new stage will listen to all the specified stages.
            </summary>
            <param name="name">The name of this stage.</param>
            <param name="extractor">The function used to extract information.</param>
            <param name="initial">The initial value.</param>
            <param name="stages">The stages to listen to.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/>, <paramref name="extractor"/> or <paramref name="stages"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.PipelinePropagationInformationStage`1.Extractor">
            <summary>
            Gets the information extraction function.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.PipelinePropagationInformationStage`1.Stages">
            <summary>
            Gets the stages on which this stage is listening on.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.ReactionPipelineStage">
            <summary>
            Enables plugging in to the pipeline and reacting to changes.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.ReactionPipelineStage.#ctor(System.Action,Viking.Pipeline.IPipelineStage[])">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.ReactionPipelineStage"/> with the specified reaction being run if any of the specified stages are invalidated.
            </summary>
            <param name="reaction">The reaction to any invalidation.</param>
            <param name="stages">The stages to react to.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="reaction"/> or <paramref name="stages"/> are null.</exception>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage.Reaction">
            <summary>
            Gets the action which will be run as a reaction to any invalidations.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.ReactionPipelineStage.Stages">
            <summary>
            Gets the stages which 
            </summary>
        </member>
        <member name="T:Viking.Pipeline.SourceSelectPipelineStage`1">
            <summary>
            Enables selecting between any number of pipeline stages as output.
            </summary>
            <typeparam name="TValue">The type of output from this stage.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.SourceSelectPipelineStage`1.#ctor(System.String,Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.SourceSelectPipelineStage`1"/> with the specified name and initial source.
            </summary>
            <param name="name">The name of this stage. Must not be null.</param>
            <param name="source">The initial source. Must no be null.</param>
            <exception cref="T:System.ArgumentNullException">If either <paramref name="name"/> or <paramref name="source"/> is null.</exception>
        </member>
        <member name="P:Viking.Pipeline.SourceSelectPipelineStage`1.Source">
            <summary>
            Gets the currently selected source.
            </summary>
        </member>
        <member name="M:Viking.Pipeline.SourceSelectPipelineStage`1.SetSource(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Sets the source of this <see cref="T:Viking.Pipeline.SourceSelectPipelineStage`1"/>.
            </summary>
            <param name="source">The new source. Must not be null.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="source"/> is null.</exception>
        </member>
        <member name="M:Viking.Pipeline.SourceSelectPipelineStage`1.SetSourceWithoutInvalidating(Viking.Pipeline.IPipelineStage{`0})">
            <summary>
            Sets the source of this <see cref="T:Viking.Pipeline.SourceSelectPipelineStage`1"/> without notifying the rest of the pipeline.
            </summary>
            <param name="source">The new source. Must not be null.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="source"/> is null.</exception>
        </member>
        <member name="T:Viking.Pipeline.PipelineSuspensionState">
            <summary>
            Defines the suspension stage of a <see cref="T:Viking.Pipeline.SuspendingPipelineStage`1"/>.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.PipelineSuspensionState.Resume">
            <summary>
            Resumes propagation, acting on any pending invalidations.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.PipelineSuspensionState.ResumeWithoutPendingInvalidates">
            <summary>
            Resumes propagation, but ignores and clears pending invalidations.
            </summary>
        </member>
        <member name="F:Viking.Pipeline.PipelineSuspensionState.Suspend">
            <summary>
            Suspends propagation, causing any invalidates to the input to be stored as a pending invalidate.
            </summary>
        </member>
        <member name="T:Viking.Pipeline.SuspendingPipelineStage`1">
            <summary>
            Controls further propagation of invalidates by allowing suspending and resuming.
            </summary>
            <typeparam name="TValue">The value passed through this stage.</typeparam>
        </member>
        <member name="M:Viking.Pipeline.SuspendingPipelineStage`1.#ctor(Viking.Pipeline.IPipelineStage{`0},Viking.Pipeline.IPipelineStage{Viking.Pipeline.PipelineSuspensionState})">
            <summary>
            Creates a new <see cref="T:Viking.Pipeline.SuspendingPipelineStage`1"/> with the specified input and suspension input.
            </summary>
            <param name="input">The input to suspend.</param>
            <param name="suspend">The stage providing the current suspension state.</param>
        </member>
        <member name="P:Viking.Pipeline.SuspendingPipelineStage`1.Input">
            <summary>
            The input to suspend propagation for.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.SuspendingPipelineStage`1.Suspend">
            <summary>
            The suspension state stage.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.SuspendingPipelineStage`1.SuspensionState">
            <summary>
            Gets the current <see cref="T:Viking.Pipeline.PipelineSuspensionState"/>.
            </summary>
        </member>
        <member name="P:Viking.Pipeline.SuspendingPipelineStage`1.HasPendingInvalidate">
            <summary>
            Checks if there are any pending invalidates on this stage.
            </summary>
        </member>
    </members>
</doc>
